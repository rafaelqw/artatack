#!/usr/bin/env node

/**
* Module dependencies.
*/
var app 	 = require('../app');
var debug 	 = require('debug')('posi-digitalprinter-api:server');
var http 	 = require('http');
var models 	 = require('../models');

/**
* Get port from environment and store in Express.
*/
var port = normalizePort(process.env.PORT || '7000');
app.set('port', port);

/**
* Create HTTP server.
*/
var http_server = http.createServer(app);

// sync() will create all table if they doesn't exist in database
models.sequelize.sync({force: false}).then(function () {
	/**
	* Listen on provided port, on all network interfaces.
	*/
	http_server.listen(port);
	http_server.on('error', onError);
	http_server.on('listening', onListening);
});

console.log('\x1b[32m', '[TCC-API] API Inicializada com sucesso!');
console.log('\x1b[0m');

/**
* Normalize a port into a number, string, or false.
*/
function normalizePort(val) {
	var port = parseInt(val, 10);
	
	if (isNaN(port))
	return val;
	
	if (port >= 0)
	return port;
	
	return false;
}

/**
* Event listener for HTTP server "error" event.
*/
function onError(error) {
	if (error.syscall !== 'listen')
	throw error;
	
	var bind = typeof port === 'string'
	? 'Pipe ' + port
	: 'Port ' + port;
	
	// handle specific listen errors with friendly messages
	switch (error.code) {
		case 'EACCES':
		console.error(bind + ' requires elevated privileges');
		process.exit(1);
		break;
		case 'EADDRINUSE':
		console.error(bind + ' is already in use');
		process.exit(1);
		break;
		default:
		throw error;
	}
}

/**
* Event listener for HTTP server "listening" event.
*/
function onListening() {
	var addr = http_server.address();
	var bind = typeof addr === 'string'
	? 'pipe ' + addr
	: 'port ' + addr.port;
	debug('Listening on ' + bind);
}